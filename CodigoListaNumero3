internal class DiccionarioT
{
   public static void Main(string[] args)
   {
      List<Tuple<string, string>> diccionario = crearDiccionario();
      traducir(diccionario);
      Console.ReadKey();


   }

   public static List<Tuple<string, string>> crearDiccionario()
   {
      List<Tuple<string, string>> diccionario = new List<Tuple<string, string>>();

      for (int i = 0; i < 5; i++)
      {
         Console.Write($"Ingrese la palabra {i + 1} en ingles: ");
         string pal1 = Console.ReadLine();
         Console.Write($"Ingrese la palabra {i + 1} en espaÃ±ol: ");
         string pal2 = Console.ReadLine();
         diccionario.Add(new Tuple<string, string>(pal1, pal2));
      }
      return (diccionario);
   }
   public static void traducir(List<Tuple<string, string>> diccionario)
   {
      Console.WriteLine("Ingrese la palabra a traducir: ");
      string clave = Console.ReadLine();
      bool encontrado = false;

      foreach (var duo in diccionario)
      {
         if (duo.Item1.Equals(clave, StringComparison.OrdinalIgnoreCase))
         {
            Console.WriteLine($"La traduccion de la palabra {clave} es: {duo.Item2}.");
            encontrado = true;
            break;

            if (duo.Item2.Equals(clave, StringComparison.OrdinalIgnoreCase))
            {
               Console.WriteLine($"La traduccion de la palabra {clave} es: {duo.Item1}.");
               encontrado = true;
               break;
            }
         }
      }
      if(!encontrado)
      {
         Console.WriteLine($"La palabra {clave} no se encontro");
      }
   }

}
